{"version":3,"sources":["component/menu.jsx","REDUX/action/action.js","REDUX/action/type.js","component/note.jsx","component/search.jsx","component/listnote.jsx","component/addNote.jsx","component/editNote.jsx","App.js","serviceWorker.js","REDUX/reducer/note.reducer.js","REDUX/reducer/root.reducer.js","index.js"],"names":["Menu","addNote","_this","props","history","push","_home","react_default","a","createElement","className","onClick","this","type","Component","withRouter","editNote","note","payload","Note","_deleteNote","deleteNote","_editNote","id","concat","color","_this2","style","backgroundColor","title","content","_renderNote","connect","dispatch","Search","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_onChangeSelect","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","select","wrap","_context","prev","next","setState","target","value","state","select_search","stop","_x","apply","arguments","_onChangeSearch","_ref2","_callee2","_context2","search","_x2","_search","preventDefault","onSubmit","name","placeholder","onChange","ListNote","localStorage","setItem","JSON","stringify","noteList","renderNote","map","obj","index","component_note","key","Fragment","component_search","AddNote","_onChangeTitle","_onChangeContent","_onSubmit","sent","_ref3","console","log","_React$createElement","htmlFor","rows","defineProperty","class","EditNote","_findNote","match","params","i","length","parseInt","ResultFindNote","FindNote","App","menu","Switch","Route","exact","path","component","Boolean","window","location","hostname","data","updateAt","Date","initialState","parse","getItem","findNote","RootReducer","combineReducers","undefined","toConsumableArray","arr_delete","filter","key_search","toLowerCase","indexOf","arr_result","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71214cdb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass Menu extends Component {\n\n\n  addNote=()=>{\n    this.props.history.push('/note')\n  }\n\n  _home=()=>{\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div className=\"menu-container\">\n        <div className=\"menu-logo\">\n          <p onClick={this._home}>App ghi chú</p>\n        </div>\n        <div className=\"add-note\">\n          <button\n          onClick={this.addNote}\n            type=\"button\" className=\"btn btn-primary\">\n            <i className=\"fas fa-folder-plus\"></i>\n            Thêm ghi chú\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default withRouter(Menu);","\n\nimport * as types from './type'\n\nexport const getNotes = (payload) => ({\n    type: types.getNotes,\n    payload\n});\n\nexport const addNote = (note) => ({\n    type: types.addNote,\n    payload: note\n})\n\nexport const deleteNote = (note) => ({\n    type: types.deleteNote,\n    payload: note\n})\n\nexport const editNote = (note) => ({\n    type: types.editNote,\n    payload: note\n})\n\nexport const search = (payload) => ({\n  type: types.search,\n  payload: payload\n})\n\n\nexport const select_search = (payload) => ({\n  type: types.select_search,\n  payload: payload\n})\n\n\n\n\n","\n\nexport const getNotes = 'getNotes'\nexport const fetchNotes = 'fetchNotes'\nexport const addNote = 'addNote'\nexport const deleteNote = 'deleteNote'\nexport const editNote = 'editNote'\nexport const search = 'search'\nexport const select_search = 'select_search'\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { deleteNote, editNote } from '../REDUX/action/action'\nimport { withRouter } from 'react-router-dom'\n\n\nclass Note extends Component {\n\n\n  _deleteNote = (note) => {\n    this.props.deleteNote(note);\n  }\n\n  _editNote = (note) => {\n\n    const { id } = note;\n    this.props.history.push(`/editNote/${id}`);\n  }\n\n\n  _renderNote(note, color) {\n\n    return (\n      <div className=\"note-container\">\n        <div className=\"title-note\" style={{ backgroundColor: color }}>\n          <p>{note.title}</p>\n        </div>\n        <div className=\"content-note\">\n          <p>{note.content}</p>\n          <button type=\"button\" onClick={() => this._deleteNote(note)} className=\"btn btn-danger delete\"><i className=\"fas fa-minus-circle\"></i></button>\n          <button type=\"button\" onClick={() => this._editNote(note)} className=\"btn btn-secondary edit\"><i className=\"fas fa-pencil-alt\"></i></button>\n        </div>\n      </div>\n    )\n  }\n\n\n  render() {\n    const { note } = this.props;\n    const yellow = \"#CEA038\";\n    const red = \"#AD292D\";\n    \n    if (note.type === \"notice\")\n      return (\n        this._renderNote(note, yellow)\n      )\n    if (note.type === \"danger\") {\n      return (\n        this._renderNote(note, red)\n      )\n    }\n    return (\n      this._renderNote(note)\n    )\n  }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteNote: (note) => {\n    dispatch(deleteNote(note))\n  },\n  editNote: (note) => {\n    dispatch(editNote(note))\n  }\n});\nexport default withRouter(connect(null, mapDispatchToProps)(Note));\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { search,select_search } from '../REDUX/action/action'\nclass Search extends Component {\n    constructor() {\n        super();\n        this.state = {\n            search: '',\n            select:''\n        }\n    }\n\n    _onChangeSelect=async(e)=>{\n        await this.setState({select : e.target.value});\n        const {select} = this.state;\n        await this.props.select_search({type:select});\n\n    }\n\n    _onChangeSearch = async (e) => {\n        await this.setState({\n            search: e.target.value\n        });\n        await this.props.search(this.state.search)\n    }\n\n    _search = (e) => {\n        e.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"search-container\">\n                <form onSubmit={this._search}>\n                    <input type=\"text\"\n                        className=\"form-control\"\n                        name=\"search\"\n                        placeholder=\"Tìm kiếm nội dung ghi chú\"\n                        onChange={this._onChangeSearch}\n                    />\n                    <div className=\"select-search\">\n                        <select value={this.state.select} className=\"form-control\" name=\"\" onChange={this._onChangeSelect}>\n                            <option value=\"\">Loại ghi chú</option>\n                            <option value=\"normal\">Bình thường</option>\n                            <option value=\"notice\">Chú ý</option>\n                            <option value=\"danger\">Cảnh báo</option>\n                        </select>\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\n\n// const mapStateToProps = (state) => ({\n\n// });\nconst mapDispatchToProps = (dispatch) => ({\n    search: (content) => {\n        dispatch(search(content))\n    },\n    select_search: (type)=>{\n        dispatch(select_search(type))\n    }\n});\nexport default connect(null, mapDispatchToProps)(Search);\n","import React, { Component } from 'react'\nimport Note from './note'\nimport { connect } from 'react-redux'\nimport Search from './search'\nclass ListNote extends Component {\n\n  componentWillMount(){\n    localStorage.setItem('note',JSON.stringify(this.props.noteList))\n  }\n\n  renderNote() {\n    const renderNote = this.props.noteList.map((obj, index) => {\n      return (\n        <Note\n          note={obj}\n          index={index}\n          key={index}\n        />\n      )\n    });\n    return renderNote;\n  }\n\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <Search />\n        <div className=\"listnote-container\">\n          {this.renderNote()}\n        </div>\n      </React.Fragment>\n\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  noteList: state.Note\n});\n\nexport default connect(mapStateToProps, null)(ListNote);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addNote } from '../REDUX/action/action'\nimport {withRouter} from 'react-router-dom'\nclass AddNote extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            content: '',\n            select:'normal'\n        }\n    }\n\n    _onChangeTitle = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    _onChangeContent = (e) => {\n        this.setState({\n            content: e.target.value\n        })\n    }\n\n    _onSubmit = async(e) => {\n        e.preventDefault();\n        const {title,content,select} = await this.state;\n        await this.props.addNote({title,content,select});\n        await this.props.history.push('/');\n    }\n\n    _onChangeSelect=async(e)=>{\n       await this.setState({\n            select : e.target.value\n        });\n        await console.log(this.state.select)\n    }\n\n  \n\n    render() {\n  \n        return (\n            <div className=\"updatenote-container\">\n            <div className=\"updatenote-wrapper\">\n                <div className=\"updatenote-title\">\n                    <p>Thêm ghi chú</p>\n                </div>\n                <form onSubmit={this._onSubmit}>\n                    <div className=\"title-updatenote\">\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            name=\"title\"\n                            placeholder=\"Nhập tiêu đề\"\n                            value={this.state.title}\n                            onChange={this._onChangeTitle}\n                        />\n                    </div>\n                    <div className=\"select-updatenote\">\n                        <label htmlFor=\"\">Loại ghi chú</label>\n                          <select className=\"form-control\" name=\"\" onChange={this._onChangeSelect}>\n                            <option value=\"normal\">Bình thường</option>\n                            <option value=\"notice\">Chú ý</option>\n                            <option value=\"danger\">Cảnh báo</option>\n                          </select>\n                    </div>\n                    <div className=\"content-updatenote\">\n                        <div className=\"form-group\">\n                            <textarea\n                                className=\"form-control\"\n                                name=\"content\" id=\"\" rows=\"3\"\n                                value={this.state.content}\n                                onChange={this._onChangeContent}\n                                rows=\"10\"\n                                placeholder=\"Nhập nội dung\"\n                            >\n                            </textarea>\n                        </div>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary updatenote\">\n                    <i class=\"far fa-save\"></i> Hoàn tất\n                     </button>\n                </form>\n            </div>\n        </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    addNote: (note) => {\n        dispatch(addNote(note))\n    }\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(AddNote));\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { editNote } from '../REDUX/action/action'\nimport { withRouter } from 'react-router-dom'\nclass EditNote extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            id: '',\n            title: '',\n            content: '',\n            select:'notice'\n        }\n    }\n\n\n    componentDidMount() {\n        this._findNote();\n    }\n\n\n\n\n    _findNote = () => {\n        const id = this.props.match.params.id;\n        const noteList = this.props.noteList;\n        for (let i = 0; i < noteList.length; i++) {\n            if (noteList[i].id === parseInt(id)) {\n                this.setState({\n                    id: noteList[i].id,\n                    title: noteList[i].title,\n                    content: noteList[i].content,\n                    select : noteList[i].type,\n                })\n            }\n        }\n    }\n\n\n    _onChangeTitle = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    _onChangeContent = (e) => {\n        this.setState({\n            content: e.target.value\n        })\n    }\n\n    _onChangeSelect=async(e)=>{\n        await this.setState({\n            select : e.target.value\n        })\n    }\n\n    _onSubmit = async (e) => {\n        e.preventDefault();\n        const { id, title, content,select } = await this.state;\n        await this.props.editNote({ id, title, content,type:select });\n        await this.props.history.push('/');\n    }\n\n\n\n    render() {\n        const yellow = \"#CEA038\";\n        const red = \"#AD292D\";\n        const type = this.state.select;\n        let color;\n        if(type === \"notice\") color = yellow;\n        if(type === \"danger\") color = red;\n        return (\n            <div className=\"updatenote-container\">\n                <div className=\"updatenote-wrapper\">\n                    <div className=\"updatenote-title\" style={{ backgroundColor : color }}>\n                        <p>Sửa ghi chú</p>\n                    </div>\n                    <form onSubmit={this._onSubmit}>\n                        <div className=\"title-updatenote\">\n                            <input type=\"text\"\n                                className=\"form-control\"\n                                name=\"title\"\n                                placeholder=\"Nhập tiêu đề\"\n                                value={this.state.title}\n                                onChange={this._onChangeTitle}\n                            />\n                        </div>\n                        <div className=\"select-updatenote\">\n                            <label htmlFor=\"\">Loại ghi chú</label>\n                            <select value={this.state.select} className=\"form-control\" name=\"\" onChange={this._onChangeSelect}>\n                                <option value=\"normal\">Bình thường</option>\n                                <option value=\"notice\">Chú ý</option>\n                                <option value=\"danger\">Cảnh báo</option>\n                            </select>\n                        </div>\n                        <div className=\"content-updatenote\">\n                            <div className=\"form-group\">\n                                <textarea\n                                    className=\"form-control\"\n                                    name=\"content\" id=\"\" rows=\"3\"\n                                    value={this.state.content}\n                                    onChange={this._onChangeContent}\n                                    rows=\"10\"\n                                    placeholder=\"Nhập nội dung\"\n                                >\n                                </textarea>\n                            </div>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary updatenote\" style={{ backgroundColor : color }}>\n                            <i class=\"far fa-save\"></i> Hoàn tất\n                     </button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    noteList: state.Note,\n    ResultFindNote: state.FindNote\n});\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    editNote: (note) => {\n        dispatch(editNote(note))\n    },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditNote));\n","import React, { Component } from 'react';\nimport './App.css';\nimport Menu from './component/menu'\nimport ListNote from './component/listnote'\nimport {Switch,Route} from 'react-router-dom'\nimport AddNote from './component/addNote'\nimport EditNote from './component/editNote'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <Menu />\n        <Switch>\n          <Route exact path=\"/\" component={ListNote} />\n          <Route path=\"/note\" component={AddNote} />\n          <Route path=\"/editNote/:id/\" component={EditNote} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n\nimport * as types from '../action/type'\n\n\nconst data = [\n    {\n        id: 1,\n        title: 'Ghi chú thường',\n        content: 'Đây là ghi chú thường',\n        updateAt: new Date(),\n        type: 'normal'\n    },\n    {\n        id: 2,\n        title: 'Chú ý',\n        content: 'Đây là ghi chú dùng để nhắc nhở',\n        updateAt: new Date(),\n        type: 'notice'\n    },\n    {\n        id: 3,\n        title: 'Cảnh báo',\n        content: 'Đây là ghi chú cảnh báo việc quan trọng ....',\n        updateAt: new Date(),\n        type: 'danger'\n    }\n];\n\n\nconst initialState = JSON.parse(localStorage.getItem('note')) ? JSON.parse(localStorage.getItem('note')) : data;\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.getNotes:\n            state = JSON.parse(localStorage.getItem('note'));\n            return [...state]\n\n        case types.addNote:\n            const { title, content,select } = payload;\n            const id = state.length + 1;\n            state.push({ id, title, content,type:select });\n            localStorage.setItem('note', JSON.stringify(state));\n            return [...state];\n\n        case types.editNote:\n            const pos = findNote(state,payload);\n            state[pos] = payload;\n            localStorage.setItem('note',JSON.stringify(state));\n            return [...state];\n\n        case types.deleteNote:\n            const index = findNote(state,payload);\n            const arr_delete = state.filter((obj,i)=>{\n                return i !== index;\n            })\n            state = arr_delete;\n            localStorage.setItem('note',JSON.stringify(state));\n            return [...state];\n        \n        case types.search:\n            \n            const key_search = payload;\n            if(!key_search){\n                state = JSON.parse(localStorage.getItem('note'));\n                return [...state];\n            }else{\n                state = JSON.parse(localStorage.getItem('note'));\n                state = state.filter((obj,i)=>{\n                    return obj.content.toLowerCase().indexOf(key_search) > -1;\n                 });\n                 return [...state];\n            }\n        \n        case types.select_search:\n        console.log(payload.type);\n            if(!payload.type){\n                state = JSON.parse(localStorage.getItem('note'));\n                return [...state];\n            }else{\n                let arr_result = [];\n                state = JSON.parse(localStorage.getItem('note'));\n                for(let i = 0;i<state.length;i++){\n                    if(payload.type === state[i].type)\n                        arr_result.push(state[i]);\n                }         \n                return [...arr_result];\n            }\n            \n          \n        default:\n            return state\n    }\n}\n\n\nconst findNote=(ListNote,Note)=>{\n        for(let i=0;i<ListNote.length;i++){\n            if(Note.id === ListNote[i].id)\n                return i;\n        }\n    return -1;\n}","\n\n\nimport {combineReducers} from 'redux'\nimport Note from './note.reducer';\n\nconst RootReducer = combineReducers({\n    Note,\n\n});\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport RootReducer from './REDUX/reducer/root.reducer';\nimport {createStore,applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux'\nimport {HashRouter} from 'react-router-dom'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(\n    RootReducer,\n    applyMiddleware(thunk)\n);\n\n\n\nReactDOM.render(\n<Provider store={store}>\n<HashRouter>\n<App />\n</HashRouter>\n</Provider>\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}